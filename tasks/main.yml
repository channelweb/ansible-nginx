---
- name: install nginx
  become: yes
  apt:
    name: nginx
    state: latest

- name: enable nginx
  become: yes
  service:
    name: nginx
    enabled: yes

- set_fact:
    nginx_main_conf: "{{ playbook_dir }}/templates/nginx/nginx.conf"

- name: update nginx.conf
  become: yes
  template:
    src: "{{ nginx_main_conf }}"
    dest: "/etc/nginx/nginx.conf"
  when: nginx_main_conf is file
  notify: restart nginx

- name: lookup files in templates/nginx/conf.d
  local_action: stat path="{{ playbook_dir }}/templates/nginx/conf.d/"
  register: nginxconf

- name: update nginx conf.d files
  become: yes
  template:
    dest: /etc/nginx/conf.d/
    src: "{{ item }}"
    mode: 0644
  when: nginxconf.stat.isdir is defined and nginxconf.stat.isdir
  with_fileglob:
    - "{{ nginxconf.stat.path }}/*"
  notify: restart nginx

- name: create apps nginx servers
  become: yes
  template:
    src: "{{ playbook_dir }}/templates/nginx/app.conf"
    dest: "/etc/nginx/sites-available/{{ item.key }}"
  with_dict: "{{ apps }}"
  notify: restart nginx

- name: symlinks to enable apps nginx servers
  become: yes
  file:
    src: "/etc/nginx/sites-available/{{ item.key }}"
    dest: "/etc/nginx/sites-enabled/{{ item.key }}"
    state: link
  with_dict: "{{ apps }}"
  notify: restart nginx

- name: other nginx servers
  become: yes
  template:
    src: "{{ playbook_dir }}/templates/nginx/{{ item.key }}.conf"
    dest: "/etc/nginx/sites-available/{{ item.key }}"
  with_dict: "{{ nginx_servers }}"
  notify: restart nginx

- name: symlinks to enable other nginx servers
  become: yes
  file:
    src: "/etc/nginx/sites-available/{{ item.key }}"
    dest: "/etc/nginx/sites-enabled/{{ item.key }}"
    state: link
  with_dict: "{{ nginx_servers }}"
  notify: restart nginx

- name: Replace a localhost entry with our own
  become: yes
  lineinfile:
    path: /etc/hosts
    regexp: '^127\.0\.0\.1'
    line: "127.0.0.1 localhost {{ localhostvar|default('') }}"
  when: localhostvar is defined
